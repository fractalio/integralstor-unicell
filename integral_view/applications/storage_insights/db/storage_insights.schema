CREATE TABLE "file_info" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "path" varchar2(200) UNIQUE NOT NULL,
  "extension" varchar(32),
  "size" integer NOT NULL,
  "last_read_time" datetime NOT NULL DEFAULT 0,
  "last_modify_time" datetime NOT NULL DEFAULT 0,
  "last_attrib_modify_time" datetime NOT NULL DEFAULT 0,
  "last_access_time" datetime NOT NULL DEFAULT 0,
  "scan_configuration_id" integer NOT NULL REFERENCES scan_configurations(id),
  "last_scan_id" integer NOT NULL  DEFAULT 0 REFERENCES scans(id) ON DELETE SET DEFAULT,
  "checksum" varchar(200)
);
CREATE UNIQUE INDEX IF NOT EXISTS file_info_path_index on file_info(path);
CREATE INDEX IF NOT EXISTS file_info_checksum_index on file_info(checksum);

insert into file_info (id, path, size, scan_configuration_id) values (0, "DEFAULT DELETED FILE", 0, 0);

CREATE TABLE "scan_configurations" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "scan_dir" varchar2(400) NOT NULL,
  "exclude_dirs" varchar2(800),
  "generate_checksum" integer NOT NULL,
  "record_history" integer NOT NULL,
  "db_transaction_size" integer NOT NULL DEFAULT 1000,
  "status_id" integer NOT NULL DEFAULT 0,
  "cron_task_id" integer
);

CREATE TABLE "reference_scan_configuration_status" (
    "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
    "description" varchar(100) NOT NULL
);

INSERT INTO reference_scan_configuration_status (id, description) values (-1, 'Deleted');
INSERT INTO reference_scan_configuration_status (id, description) values (1, 'Scheduled');
INSERT INTO reference_scan_configuration_status (id, description) values (2, 'Not scheduled');

CREATE TABLE "scans" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "scan_configuration_id" integer NOT NULL REFERENCES scan_configurations(id),
    "initiate_time" datetime NOT NULL DEFAULT 0,
    "completion_time" datetime NOT NULL DEFAULT 0,
    "scanned_dirs_count" integer NOT NULL DEFAULT 0,
    "scanned_files_count" integer NOT NULL DEFAULT 0,
    "successful_creation_modification_transactions_count" integer NOT NULL DEFAULT 0,
    "failed_creation_modification_transactions_count" integer NOT NULL DEFAULT 0,
    "successful_deletion_transactions_count" integer NOT NULL DEFAULT 0,
    "failed_deletion_transactions_count" integer NOT NULL DEFAULT 0,
    "new_files_count" integer NOT NULL DEFAULT 0,
    "modified_files_count" integer NOT NULL DEFAULT 0,
    "deleted_files_count" integer NOT NULL DEFAULT 0,
    "pid" integer NOT NULL,
    "status_id" integer NOT NULL DEFAULT 0,
    "status_str" varchar2(400)
);


UPDATE SQLITE_SEQUENCE SET seq = 1 WHERE name = 'scans';

CREATE TABLE "reference_scan_status" (
    "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
    "description" varchar(100) NOT NULL
);

INSERT INTO reference_scan_status (id, description) values (-1, 'Error');
INSERT INTO reference_scan_status (id, description) values (0, 'Not initiated');
INSERT INTO reference_scan_status (id, description) values (1, 'Running');
INSERT INTO reference_scan_status (id, description) values (2, 'Completed successfully');
INSERT INTO reference_scan_status (id, description) values (3, 'Completed with errors');
INSERT INTO reference_scan_status (id, description) values (4, 'Killed');

CREATE TABLE "file_events_history" (
    "id" INTEGER PRIMARY KEY,
    "file_info_id" INTEGER NULL DEFAULT 0 REFERENCES file_info(id) ON DELETE SET DEFAULT,
    "path" varchar2(200) NOT NULL,
    "events" varchar2(200) NOT NULL,
    "event_time" datetime NOT NULL,
    "moved_from_path" varchar2(200),
    "last_scan_id" integer NOT NULL DEFAULT 0,
    "scan_configuration_id" integer NOT NULL REFERENCES scan_configurations(id),
    unique(path, events, event_time)
);
