CREATE TABLE "email_config" (
  "id" integer NOT NULL PRIMARY KEY,
  "server" varchar(40) NOT NULL,
  "port" integer NOT NULL,
  "username" varchar(40) NOT NULL,
  "pswd" varchar(40) NOT NULL,
  "tls" bool NOT NULL,
  "email_alerts" bool NOT NULL,
  "rcpt_list" varchar(400) NOT NULL,
  "email_audit" bool NOT NULL DEFAULT '0', 
  "email_quota" bool NOT NULL DEFAULT '0');

CREATE TABLE "samba_valid_users" (
  id INTEGER NOT NULL PRIMARY KEY,
  share_id INTEGER NOT NULL,
  grp bool NOT NULL,
  name VARCHAR(40) NOT NULL
);

CREATE TABLE "samba_shares" (
  share_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name varchar(100) NOT NULL UNIQUE,
  vol varchar(40) NOT NULL,
  path varchar(100) NOT NULL,
  display_path varchar(140) NOT NULL,
  comment varchar(100),
  read_only bool not null,
  guest_ok bool not null,
  browseable bool not null,
  hosts_allow varchar2(200), 
  hosts_deny varchar2(200)
);

CREATE TABLE "global_params" (
  id INTEGER NOT NULL PRIMARY KEY,
  logging_level INTEGER NOT NULL
);

CREATE TABLE "samba_global_ad" (
  "id" INTEGER NOT NULL PRIMARY KEY,
  "realm" VARCHAR(60) NOT NULL,
  "password_server" VARCHAR(60) NOT NULL,
  "ad_schema_mode" VARCHAR(60) NOT NULL,
  "id_map_min" INTEGER NOT NULL,
  "id_map_max" INTEGER NOT NULL,
  "password_server_ip" VARCHAR(60) NOT NULL default "0.0.0.0");

CREATE TABLE "samba_global_common" (
  "id" INTEGER NOT NULL PRIMARY KEY,
  "security" VARCHAR(60) NOT NULL,
  "workgroup" VARCHAR(60) NOT NULL,
  "netbios_name" VARCHAR(60) NOT NULL,
  "include_homes_section" BOOL NOT NULL
);

CREATE TABLE "admin_alerts" (
  user varchar(60) NOT NULL PRIMARY KEY,
  last_refresh_time DATETIME NOT NULL
);

CREATE TABLE "rsync_shares" (
  "name" varchar(200) NOT NULL,
  "path" varchar(200) NOT NULL,
  "comment" varchar(200) NOT NULL,
  "list" boolean NOT NULL DEFAULT 'yes',
  "readonly" boolean NOT NULL DEFAULT 'no',
  "uid" varchar(200) NOT NULL,
  "gid" varchar(200) NOT NULL
);

CREATE TABLE "tasks" (
  "task_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "description" varchar(200) NOT NULL,
  "task_type_id" integer NOT NULL,
  "node" varchar(200) NOT NULL,
  "run_as_user_name" VARCHAR(100) NOT NULL DEFAULT 'root',
  "attempts" integer NOT NULL,
  "cron_task_id" integer NOT NULL,
  "retry_interval" integer NOT NULL DEFAULT 1,
  "create_time" datetime NOT NULL,
  "initiate_time" datetime NOT NULL,
  "last_run_time" datetime,
  "status" varchar(50) NOT NULL DEFAULT 'queued',
  FOREIGN KEY(task_type_id) REFERENCES task_types(task_type_id)
);

CREATE TABLE "subtasks" (
  "subtask_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "description" varchar(100) NOT NULL,
  "command"  varchar(400) NOT NULL,
  "task_id" integer NOT NULL,
  "status" varchar(100) NOT NULL DEFAULT 'queued',
  "return_code" varchar(10),
  FOREIGN KEY(task_id) REFERENCES tasks(task_id)
);

CREATE TABLE "task_types" (
  "task_type_id" integer NOT NULL PRIMARY KEY,
  "description" varchar(200) NOT NULL
);

insert into task_types (task_type_id, description) values (0, 'Unspecified');
insert into task_types (task_type_id, description) values (1, 'Disk replacement');
insert into task_types (task_type_id, description) values (2, 'Service restart');
insert into task_types (task_type_id, description) values (3, 'ZFS scrub');
insert into task_types (task_type_id, description) values (4, 'Remote replication');

CREATE TABLE "cron_tasks" (
  "cron_task_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "description" varchar(200) NOT NULL,
  "command" varchar(200) NOT NULL
);


CREATE TABLE "remote_replications" (
  "remote_replication_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "mode" varchar(20) NOT NULL,
  "cron_task_id" integer NOT NULL,
  FOREIGN KEY(cron_task_id) REFERENCES cron_tasks(cron_task_id)
);


CREATE TABLE "zfs_replications" (
  "zfs_replication_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "source_dataset" varchar(100) NOT NULL,
  "target_pool" varchar(100) NOT NULL,
  "target_ip" varchar(30) NOT NULL,
  "target_user_name" varchar(100) NOT NULL,
  "remote_replication_id" integer NOT NULL,
  FOREIGN KEY(remote_replication_id) REFERENCES remote_replications(remote_replication_id)
);


CREATE TABLE "rsync_replications" (
  "rsync_replication_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  "rsync_type" varchar(10) NOT NULL,
  "short_switches" varchar(200),
  "long_switches" varchar(100),
  "source_path" varchar(200) NOT NULL,
  "target_path" varchar(200) NOT NULL,
  "target_ip" varchar(30) NOT NULL,
  "target_user_name" varchar(100) NOT NULL,
  "remote_replication_id" integer NOT NULL,
  FOREIGN KEY(remote_replication_id) REFERENCES remote_replications(remote_replication_id)
);


CREATE TABLE "audit" (
  "audit_id" integer NOT NULL PRIMARY KEY,
  "audit_time" datetime NOT NULL,
  "username" varchar(100) NOT NULL,
  "source_ip" varchar(100) NOT NULL,
  "audit_code" varchar(100) NOT NULL,
  "audit_str" varchar(150) NOT NULL
);
